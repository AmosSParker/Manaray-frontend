import { VERSION } from '@angular/core';
import { breadcrumbsIntegration, globalHandlersIntegration, httpContextIntegration, linkedErrorsIntegration, } from '@sentry/browser';
import { init as browserInit, setContext } from '@sentry/browser';
import { applySdkMetadata, dedupeIntegration, functionToStringIntegration, inboundFiltersIntegration, } from '@sentry/core';
import { logger } from '@sentry/utils';
import { IS_DEBUG_BUILD } from './flags';
/**
 * Get the default integrations for the Angular SDK.
 */
export function getDefaultIntegrations() {
    // Don't include the BrowserApiErrors integration as it interferes with the Angular SDK's `ErrorHandler`:
    // BrowserApiErrors would catch certain errors before they reach the `ErrorHandler` and
    // thus provide a lower fidelity error than what `SentryErrorHandler`
    // (see errorhandler.ts) would provide.
    //
    // see:
    //  - https://github.com/getsentry/sentry-javascript/issues/5417#issuecomment-1453407097
    //  - https://github.com/getsentry/sentry-javascript/issues/2744
    return [
        inboundFiltersIntegration(),
        functionToStringIntegration(),
        breadcrumbsIntegration(),
        globalHandlersIntegration(),
        linkedErrorsIntegration(),
        dedupeIntegration(),
        httpContextIntegration(),
    ];
}
/**
 * Inits the Angular SDK
 */
export function init(options) {
    const opts = {
        defaultIntegrations: getDefaultIntegrations(),
        ...options,
    };
    applySdkMetadata(opts, 'angular');
    checkAndSetAngularVersion();
    browserInit(opts);
}
function checkAndSetAngularVersion() {
    const ANGULAR_MINIMUM_VERSION = 14;
    const angularVersion = VERSION && VERSION.major ? parseInt(VERSION.major, 10) : undefined;
    if (angularVersion) {
        if (angularVersion < ANGULAR_MINIMUM_VERSION) {
            IS_DEBUG_BUILD &&
                logger.warn(`This Sentry SDK does not officially support Angular ${angularVersion}.`, `This SDK only supports Angular ${ANGULAR_MINIMUM_VERSION} and above.`, "If you're using lower Angular versions, check the Angular Version Compatibility table in our docs: https://docs.sentry.io/platforms/javascript/guides/angular/#angular-version-compatibility.", 'Otherwise, please consider upgrading your Angular version.');
        }
        setContext('angular', { version: angularVersion });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2RrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Nkay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhDLE9BQU8sRUFDTCxzQkFBc0IsRUFDdEIseUJBQXlCLEVBQ3pCLHNCQUFzQixFQUN0Qix1QkFBdUIsR0FDeEIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQUUsSUFBSSxJQUFJLFdBQVcsRUFBRSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRSxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLGlCQUFpQixFQUNqQiwyQkFBMkIsRUFDM0IseUJBQXlCLEdBQzFCLE1BQU0sY0FBYyxDQUFDO0FBRXRCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxzQkFBc0I7SUFDcEMseUdBQXlHO0lBQ3pHLHVGQUF1RjtJQUN2RixxRUFBcUU7SUFDckUsdUNBQXVDO0lBQ3ZDLEVBQUU7SUFDRixPQUFPO0lBQ1Asd0ZBQXdGO0lBQ3hGLGdFQUFnRTtJQUNoRSxPQUFPO1FBQ0wseUJBQXlCLEVBQUU7UUFDM0IsMkJBQTJCLEVBQUU7UUFDN0Isc0JBQXNCLEVBQUU7UUFDeEIseUJBQXlCLEVBQUU7UUFDM0IsdUJBQXVCLEVBQUU7UUFDekIsaUJBQWlCLEVBQUU7UUFDbkIsc0JBQXNCLEVBQUU7S0FDekIsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxJQUFJLENBQUMsT0FBdUI7SUFDMUMsTUFBTSxJQUFJLEdBQUc7UUFDWCxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRTtRQUM3QyxHQUFHLE9BQU87S0FDWCxDQUFDO0lBRUYsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRWxDLHlCQUF5QixFQUFFLENBQUM7SUFDNUIsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3BCLENBQUM7QUFFRCxTQUFTLHlCQUF5QjtJQUNoQyxNQUFNLHVCQUF1QixHQUFHLEVBQUUsQ0FBQztJQUVuQyxNQUFNLGNBQWMsR0FBRyxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUUxRixJQUFJLGNBQWMsRUFBRTtRQUNsQixJQUFJLGNBQWMsR0FBRyx1QkFBdUIsRUFBRTtZQUM1QyxjQUFjO2dCQUNaLE1BQU0sQ0FBQyxJQUFJLENBQ1QsdURBQXVELGNBQWMsR0FBRyxFQUN4RSxrQ0FBa0MsdUJBQXVCLGFBQWEsRUFDdEUsK0xBQStMLEVBQy9MLDREQUE0RCxDQUM3RCxDQUFDO1NBQ0w7UUFDRCxVQUFVLENBQUMsU0FBUyxFQUFFLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUM7S0FDcEQ7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVkVSU0lPTiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUgeyBCcm93c2VyT3B0aW9ucyB9IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG5pbXBvcnQge1xuICBicmVhZGNydW1ic0ludGVncmF0aW9uLFxuICBnbG9iYWxIYW5kbGVyc0ludGVncmF0aW9uLFxuICBodHRwQ29udGV4dEludGVncmF0aW9uLFxuICBsaW5rZWRFcnJvcnNJbnRlZ3JhdGlvbixcbn0gZnJvbSAnQHNlbnRyeS9icm93c2VyJztcbmltcG9ydCB7IGluaXQgYXMgYnJvd3NlckluaXQsIHNldENvbnRleHQgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuaW1wb3J0IHtcbiAgYXBwbHlTZGtNZXRhZGF0YSxcbiAgZGVkdXBlSW50ZWdyYXRpb24sXG4gIGZ1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbixcbiAgaW5ib3VuZEZpbHRlcnNJbnRlZ3JhdGlvbixcbn0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB0eXBlIHsgSW50ZWdyYXRpb24gfSBmcm9tICdAc2VudHJ5L3R5cGVzJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5pbXBvcnQgeyBJU19ERUJVR19CVUlMRCB9IGZyb20gJy4vZmxhZ3MnO1xuXG4vKipcbiAqIEdldCB0aGUgZGVmYXVsdCBpbnRlZ3JhdGlvbnMgZm9yIHRoZSBBbmd1bGFyIFNESy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRJbnRlZ3JhdGlvbnMoKTogSW50ZWdyYXRpb25bXSB7XG4gIC8vIERvbid0IGluY2x1ZGUgdGhlIEJyb3dzZXJBcGlFcnJvcnMgaW50ZWdyYXRpb24gYXMgaXQgaW50ZXJmZXJlcyB3aXRoIHRoZSBBbmd1bGFyIFNESydzIGBFcnJvckhhbmRsZXJgOlxuICAvLyBCcm93c2VyQXBpRXJyb3JzIHdvdWxkIGNhdGNoIGNlcnRhaW4gZXJyb3JzIGJlZm9yZSB0aGV5IHJlYWNoIHRoZSBgRXJyb3JIYW5kbGVyYCBhbmRcbiAgLy8gdGh1cyBwcm92aWRlIGEgbG93ZXIgZmlkZWxpdHkgZXJyb3IgdGhhbiB3aGF0IGBTZW50cnlFcnJvckhhbmRsZXJgXG4gIC8vIChzZWUgZXJyb3JoYW5kbGVyLnRzKSB3b3VsZCBwcm92aWRlLlxuICAvL1xuICAvLyBzZWU6XG4gIC8vICAtIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzU0MTcjaXNzdWVjb21tZW50LTE0NTM0MDcwOTdcbiAgLy8gIC0gaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9pc3N1ZXMvMjc0NFxuICByZXR1cm4gW1xuICAgIGluYm91bmRGaWx0ZXJzSW50ZWdyYXRpb24oKSxcbiAgICBmdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24oKSxcbiAgICBicmVhZGNydW1ic0ludGVncmF0aW9uKCksXG4gICAgZ2xvYmFsSGFuZGxlcnNJbnRlZ3JhdGlvbigpLFxuICAgIGxpbmtlZEVycm9yc0ludGVncmF0aW9uKCksXG4gICAgZGVkdXBlSW50ZWdyYXRpb24oKSxcbiAgICBodHRwQ29udGV4dEludGVncmF0aW9uKCksXG4gIF07XG59XG5cbi8qKlxuICogSW5pdHMgdGhlIEFuZ3VsYXIgU0RLXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbml0KG9wdGlvbnM6IEJyb3dzZXJPcHRpb25zKTogdm9pZCB7XG4gIGNvbnN0IG9wdHMgPSB7XG4gICAgZGVmYXVsdEludGVncmF0aW9uczogZ2V0RGVmYXVsdEludGVncmF0aW9ucygpLFxuICAgIC4uLm9wdGlvbnMsXG4gIH07XG5cbiAgYXBwbHlTZGtNZXRhZGF0YShvcHRzLCAnYW5ndWxhcicpO1xuXG4gIGNoZWNrQW5kU2V0QW5ndWxhclZlcnNpb24oKTtcbiAgYnJvd3NlckluaXQob3B0cyk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrQW5kU2V0QW5ndWxhclZlcnNpb24oKTogdm9pZCB7XG4gIGNvbnN0IEFOR1VMQVJfTUlOSU1VTV9WRVJTSU9OID0gMTQ7XG5cbiAgY29uc3QgYW5ndWxhclZlcnNpb24gPSBWRVJTSU9OICYmIFZFUlNJT04ubWFqb3IgPyBwYXJzZUludChWRVJTSU9OLm1ham9yLCAxMCkgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKGFuZ3VsYXJWZXJzaW9uKSB7XG4gICAgaWYgKGFuZ3VsYXJWZXJzaW9uIDwgQU5HVUxBUl9NSU5JTVVNX1ZFUlNJT04pIHtcbiAgICAgIElTX0RFQlVHX0JVSUxEICYmXG4gICAgICAgIGxvZ2dlci53YXJuKFxuICAgICAgICAgIGBUaGlzIFNlbnRyeSBTREsgZG9lcyBub3Qgb2ZmaWNpYWxseSBzdXBwb3J0IEFuZ3VsYXIgJHthbmd1bGFyVmVyc2lvbn0uYCxcbiAgICAgICAgICBgVGhpcyBTREsgb25seSBzdXBwb3J0cyBBbmd1bGFyICR7QU5HVUxBUl9NSU5JTVVNX1ZFUlNJT059IGFuZCBhYm92ZS5gLFxuICAgICAgICAgIFwiSWYgeW91J3JlIHVzaW5nIGxvd2VyIEFuZ3VsYXIgdmVyc2lvbnMsIGNoZWNrIHRoZSBBbmd1bGFyIFZlcnNpb24gQ29tcGF0aWJpbGl0eSB0YWJsZSBpbiBvdXIgZG9jczogaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvYW5ndWxhci8jYW5ndWxhci12ZXJzaW9uLWNvbXBhdGliaWxpdHkuXCIsXG4gICAgICAgICAgJ090aGVyd2lzZSwgcGxlYXNlIGNvbnNpZGVyIHVwZ3JhZGluZyB5b3VyIEFuZ3VsYXIgdmVyc2lvbi4nLFxuICAgICAgICApO1xuICAgIH1cbiAgICBzZXRDb250ZXh0KCdhbmd1bGFyJywgeyB2ZXJzaW9uOiBhbmd1bGFyVmVyc2lvbiB9KTtcbiAgfVxufVxuIl19